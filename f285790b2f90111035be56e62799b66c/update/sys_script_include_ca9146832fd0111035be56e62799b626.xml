<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_44813_mmservices.Site17MMServicesUtil</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>General utility class for the SIte 17 Multimedia Services application.</description>
        <name>Site17MMServicesUtil</name>
        <script><![CDATA[var Site17MMServicesUtil = (function() {
    var schedule_sys_id = '4882479b2f50511035be56e62799b64c';
    var PROPERTY_NAME;
    (function(PROPERTY_NAME) {
        PROPERTY_NAME["default_min_leadTime_days"] = "x_44813_mmservices.default_min_leadTime_days";
        PROPERTY_NAME["reservation_type"] = "x_44813_mmservices.reservation_type";
    })(PROPERTY_NAME || (PROPERTY_NAME = {}));
    var XML_NAME_default_min_lead_time = "default_min_lead_time";
    var DATE_PATTERN = /^\d{4}-(0[1-9]|1[0-2])-[0-2]\d|3[01]$/;
    var TIME_PATTERN = /^([01]\d|2[0-3]):[0-5]\d$/;
    var TIME_RANGE_PATTERN = /^((?:[01]\d|2[0-3]):[0-5]\d)-((?:[01]\d|2[0-3]):[0-5]\d)$/;
    var site17MMServicesUtilConstructor = Class.create();
    var privateConstructorData = {};

    function isNil(obj) {
        switch (typeof obj) {
            case 'undefined':
                return true;
            case 'number':
                return isNaN(obj) || !isFinite(obj);
            case 'string':
                return obj.trim().length == 0;
            case 'object':
                return obj == null || ('' + obj).trim().length == 0;
            default:
                return false;
        }
    }

    function getDefaultMinLeadTimeDays() {
        var defaultMinLeadTime = parseInt('' + gs.getProperty(PROPERTY_NAME.default_min_leadTime_days, ''));
        return isNaN(defaultMinLeadTime) ? 3 : defaultMinLeadTime;
    }

    function getReservationTypeSysId() {
        var sysId = gs.getProperty(PROPERTY_NAME.reservation_type);
        if (isNil(sysId))
            return;
        return isNil(sysId) ? undefined : sysId;
    }

    function getReservationScheduler() {
        var sys_id = getReservationTypeSysId();
        if (isNil(sys_id)) {
            privateConstructorData._scheduler = undefined;
            throw new Error('Failure invoking x_44813_mmservices.getReservationScheduler: Property "' + PROPERTY_NAME.reservation_type + '" is empty.');
        }
        if (typeof privateConstructorData._scheduler !== 'undefined') {
            if (privateConstructorData._scheduler.sys_id == sys_id)
                return privateConstructorData._scheduler;
            privateConstructorData._scheduler = undefined;
        }
        var gr = new GlideRecord(x_g_inte_site_17.ReservationScheduler.TABLE_NAME);
        gr.addQuery('sys_id', sys_id);
        gr.query();
        if (!gr.next())
            throw new Error('Failure invoking x_44813_mmservices.getReservationScheduler: Reservation Type (' + x_g_inte_site_17.ReservationScheduler.TABLE_NAME +
                ') with sys_id "' + sys_id + '" (specified in setting ' + PROPERTY_NAME.reservation_type + ') was not found.');
        privateConstructorData._scheduler = new x_g_inte_site_17.ReservationScheduler(gr);
        return privateConstructorData._scheduler;
    }
    site17MMServicesUtilConstructor.getDefaultMinLeadTimeDays = getDefaultMinLeadTimeDays;
    site17MMServicesUtilConstructor.getReservationTypeSysId = getReservationTypeSysId;
    site17MMServicesUtilConstructor.getReservationScheduler = getReservationScheduler;
    site17MMServicesUtilConstructor.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
        getDefaultMinLeadTimeDays: function() {
            this.setAnswer(getDefaultMinLeadTimeDays());
        },
        getAvailabilitiesInRange: function() {
            var scheduler;
            try {
                scheduler = getReservationScheduler();
            } catch (e) {
                this.setError(e);
                return;
            }
            var include = x_g_inte_site_17.ReservationSchedulerAjax.getAvailabilitiesInRange(this, scheduler);
            if (new global.ArrayUtil().contains(include, XML_NAME_default_min_lead_time)) {
                var element = this.newItem(XML_NAME_default_min_lead_time);
                element.setAttribute('value', '' + getDefaultMinLeadTimeDays());
            }
        },
        getNextAvailableTimeSlot: function() {
            var scheduler;
            try {
                scheduler = getReservationScheduler();
            } catch (e) {
                this.setError(e);
                return;
            }
            var include = x_g_inte_site_17.ReservationSchedulerAjax.getNextAvailableTimeSlot(this, scheduler);
            if (new global.ArrayUtil().contains(include, XML_NAME_default_min_lead_time)) {
                var element = this.newItem(XML_NAME_default_min_lead_time);
                element.setAttribute('value', '' + getDefaultMinLeadTimeDays());
            }
        },
        type: "Site17MMServicesUtil"
    });
    return site17MMServicesUtilConstructor;
})();]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-06-29 19:31:29</sys_created_on>
        <sys_id>ca9146832fd0111035be56e62799b626</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Site17MMServicesUtil</sys_name>
        <sys_package display_value="Site 17 Multimedia Services" source="x_44813_mmservices">f285790b2f90111035be56e62799b66c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Site 17 Multimedia Services">f285790b2f90111035be56e62799b66c</sys_scope>
        <sys_update_name>sys_script_include_ca9146832fd0111035be56e62799b626</sys_update_name>
        <sys_updated_by>erwinel_da</sys_updated_by>
        <sys_updated_on>2022-08-22 05:11:07</sys_updated_on>
    </sys_script_include>
</record_update>
